admin:
  access_log_path: /dev/null
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8001

node:
  id: "id_1"
  cluster: "cluster_1"

static_resources:

  listeners:
  - name: listener_https
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 9001
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          # access_log:
          # - name: envoy.access_loggers.stdout
          #   typed_config:
          #     "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
          http_filters:
          - name: envoy.filters.http.router
          forward_client_cert_details: SANITIZE_SET
          set_current_client_cert_details:
            subject: true
            dns: true
            uri: true
          route_config:
            name: local_route
            virtual_hosts:
            - name: backend-1
              domains: ["*"]
              routes:
                - match:
                    prefix: "/"
                  route:
                    cluster: service1
          - name: envoy.ext_authz
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.http.ext_authz.v3.ExtAuthz
                with_request_body:
                  max_request_bytes: 8192
                  allow_partial_message: true
                failure_mode_allow: false
                grpc_service:
                  google_grpc:
                    target_uri: 127.0.0.1:9191
                    stat_prefix: ext_authz
                  timeout: 0.5s
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
          common_tls_context:
            tls_certificate_sds_secret_configs:
            - name: "spiffe://tech-talk.nutanix.com/app1"  #SPIFFE ID
              sds_config:
                api_config_source:
                  transport_api_version: "V3"
                  api_type: GRPC
                  grpc_services:
                    envoy_grpc:
                      cluster_name: spire_agent
            combined_validation_context:
              # validate the SPIFFE ID of incoming clients (optionally)
              default_validation_context:
                match_subject_alt_names:
                  - exact: "spiffe://tech-talk.nutanix.com/app2"
              # obtain the trust bundle from SDS
              validation_context_sds_secret_config:
                name: "spiffe://tech-talk.nutanix.com"
                sds_config:
                  api_config_source:
                    transport_api_version: "V3"
                    api_type: GRPC
                    grpc_services:
                      envoy_grpc:
                        cluster_name: spire_agent
            tls_params:
              ecdh_curves:
                - X25519:P-256:P-521:P-384

  - name: listener_http
    address:
      socket_address:
        address: 0.0.0.0
        port_value: 80
    filter_chains:
    - filters:
      - name: envoy.filters.network.http_connection_manager
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
          stat_prefix: ingress_http
          # access_log:
          # - name: envoy.access_loggers.stdout
          #   typed_config:
          #     "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog
          http_filters:
          - name: envoy.filters.http.router
          route_config:
            name: local_route
            virtual_hosts:
            - name: backend-1
              domains: ["*"]
              routes:
              - match:
                  prefix: "/"
                redirect:
                  port_redirect: 9001

  clusters:
    - name: service1
      connect_timeout: 0.25s
      type: strict_dns
      lb_policy: round_robin
      load_assignment:
        cluster_name: service1
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: 127.0.0.1
                      port_value: 5001
    - name: spire_agent
      connect_timeout: 0.25s
      http2_protocol_options: {}
      load_assignment:
        cluster_name: spire_agent
        endpoints:
        - lb_endpoints:
          - endpoint:
              address:
                pipe:
                  path: /run/spire/sockets/agent.sock